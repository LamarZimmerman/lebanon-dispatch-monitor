const express = require('express');
const puppeteer = require('puppeteer-core');
const cheerio = require('cheerio');

const app = express();
const PORT = process.env.PORT || 3000;

async function scrapeData() {
  let browser;

  try {
    browser = await puppeteer.launch({
      executablePath: '/usr/bin/chromium',
      args: ['--no-sandbox', '--disable-setuid-sandbox'],
    });

    const page = await browser.newPage();
    await page.goto('https://example.com'); // Replace with the actual site

    const content = await page.content();
    const $ = cheerio.load(content);

    // Replace below with actual scraping logic
    const heading = $('h1').text();

    return { heading };
  } catch (error) {
    console.error('Scraping failed:', error.message);
    return { error: 'Scraping failed. Check logs for details.' };
  } finally {
    if (browser) {
      await browser.close();
    }
  }
}

app.get('/', async (req, res) => {
  const data = await scrapeData();
  res.json(data);
});

app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});
